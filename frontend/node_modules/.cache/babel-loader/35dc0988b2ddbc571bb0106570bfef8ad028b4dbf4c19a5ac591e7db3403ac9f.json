{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Login\", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Username:\", -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Password:\", -1 /* HOISTED */);\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Login\", -1 /* HOISTED */);\nconst _hoisted_9 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  const _component_Record = _resolveComponent(\"Record\");\n  const _component_WordFrequencies = _resolveComponent(\"WordFrequencies\");\n  const _component_Top3Phrases = _resolveComponent(\"Top3Phrases\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [!$data.loggedIn ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.login && $options.login(...args), [\"prevent\"]))\n  }, [_hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.username = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.username]]), _hoisted_5, _hoisted_6, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]]), _hoisted_7, _hoisted_8], 32 /* NEED_HYDRATION */), _createVNode(_component_router_link, {\n    to: \"/register\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Register\")]),\n    _: 1 /* STABLE */\n  })])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [_createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.logout && $options.logout(...args))\n  }, \"Logout\"), $data.loggedIn ? (_openBlock(), _createBlock(_component_Record, {\n    key: 0\n  })) : _createCommentVNode(\"v-if\", true), $data.loggedIn ? (_openBlock(), _createBlock(_component_WordFrequencies, {\n    key: 1\n  })) : _createCommentVNode(\"v-if\", true), $data.loggedIn ? (_openBlock(), _createBlock(_component_Top3Phrases, {\n    key: 2\n  })) : _createCommentVNode(\"v-if\", true)]))]);\n}","map":{"version":3,"names":["id","key","_createElementVNode","type","_createElementBlock","_hoisted_1","$data","loggedIn","_hoisted_2","_hoisted_3","onSubmit","_cache","_withModifiers","args","$options","login","_hoisted_4","$event","username","required","_hoisted_5","_hoisted_6","password","_hoisted_7","_hoisted_8","_createVNode","_component_router_link","to","default","_withCtx","_createTextVNode","_","_hoisted_9","onClick","logout","_createBlock","_component_Record","_createCommentVNode","_component_WordFrequencies","_component_Top3Phrases"],"sources":["B:\\Kyro Project\\Speech Recognition Project\\frontend\\src\\App.vue"],"sourcesContent":["<!-- <template>\n  <div id=\"app\">\n    <h1>{{ message }}</h1>\n    <button @click=\"recordAndTranslate\">Record and Translate</button>\n    <div v-if=\"transcription\">\n      <p>Recognized: {{ transcription.recognized }}</p>\n      <p>Translated: {{ transcription.translated }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App',\n  data() {\n    return {\n      message: 'Welcome to Speech Recognition and Translation App!',\n      transcription: null\n    };\n  },\n  methods: {\n    async recordAndTranslate() {\n      try {\n        // Simulating speech recognition input\n        const text = \"Hello, how are you?\";\n        const response = await fetch('/record', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({ text })\n        });\n        const data = await response.json();\n        this.transcription = {\n          recognized: data.recognized,\n          translated: data.translated\n        };\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    }\n  }\n};\n</script>\n\n<style>\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style> -->\n\n<!-- <template>\n  <div id=\"app\">\n    <Record />\n    <WordFrequencies />\n    <Top3Phrases />\n  </div>\n</template>\n\n<script>\nimport Record from './components/Record.vue';\nimport WordFrequencies from './components/WordFrequencies.vue';\nimport Top3Phrases from './components/Top3Phrases.vue';\n\nexport default {\n  name: 'App',\n  components: {\n    Record,\n    WordFrequencies,\n    Top3Phrases,\n  },\n};\n</script>\n\n<style>\n/* Add your styles here */\n</style> -->\n\n\n<template>\n  <div id=\"app\">\n    <div v-if=\"!loggedIn\">\n      <h2>Login</h2>\n      <form @submit.prevent=\"login\">\n        <label>Username:</label>\n        <input type=\"text\" v-model=\"username\" required><br>\n        <label>Password:</label>\n        <input type=\"password\" v-model=\"password\" required><br>\n        <button type=\"submit\">Login</button>\n      </form>\n      <router-link to=\"/register\">Register</router-link>\n    </div>\n\n    <div v-else>\n      <button @click=\"logout\">Logout</button>\n      <Record v-if=\"loggedIn\" />\n      <WordFrequencies v-if=\"loggedIn\" />\n      <Top3Phrases v-if=\"loggedIn\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport Record from './components/Record.vue';\nimport WordFrequencies from './components/WordFrequencies.vue';\nimport Top3Phrases from './components/Top3Phrases.vue';\n\nexport default {\n  name: 'App',\n  components: {\n    Record,\n    WordFrequencies,\n    Top3Phrases,\n  },\n  data() {\n    return {\n      loggedIn: false,\n      username: '',\n      password: ''\n    };\n  },\n  methods: {\n    async login() {\n      try {\n        const response = await fetch('http://localhost:5000/login', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ username: this.username, password: this.password })\n        });\n        if (response.ok) {\n          alert('Login successful!');\n          this.loggedIn = true;\n          this.$router.push('/');\n        } else {\n          const data = await response.json();\n          alert('Login failed: ' + data.error);\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    },\n    async logout() {\n      try {\n        const response = await fetch('http://localhost:5000/logout', {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        if (response.ok) {\n          alert('Logged out successfully!');\n          this.loggedIn = false;\n          this.$router.push('/');\n        } else {\n          const data = await response.json();\n          alert('Logout failed: ' + data.error);\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    }\n  },\n  created() {\n    // Check if user is already logged in\n    const token = localStorage.getItem('token');\n    if (token) {\n      this.loggedIn = true;\n    }\n  }\n};\n</script>\n\n<style>\n/* Add your styles here */\n</style>\n\n"],"mappings":";;EAqFOA,EAAE,EAAC;AAAK;;EArFfC,GAAA;AAAA;gCAuFMC,mBAAA,CAAc,YAAV,OAAK;gCAEPA,mBAAA,CAAwB,eAAjB,WAAS;gCAC+BA,mBAAA,CAAI;gCACnDA,mBAAA,CAAwB,eAAjB,WAAS;gCACmCA,mBAAA,CAAI;gCACvDA,mBAAA,CAAoC;EAA5BC,IAAI,EAAC;AAAQ,GAAC,OAAK;;EA7FnCF,GAAA;AAAA;;;;;;uBAqFEG,mBAAA,CAmBM,OAnBNC,UAmBM,G,CAlBQC,KAAA,CAAAC,QAAQ,I,cAApBH,mBAAA,CAUM,OAhGVI,UAAA,GAuFMC,UAAc,EACdP,mBAAA,CAMO;IANAQ,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAxFnBC,cAAA,KAAAC,IAAA,KAwF6BC,QAAA,CAAAC,KAAA,IAAAD,QAAA,CAAAC,KAAA,IAAAF,IAAA,CAAK;MAC1BG,UAAwB,E,gBACxBd,mBAAA,CAA+C;IAAxCC,IAAI,EAAC,MAAM;IA1F1B,uBAAAQ,MAAA,QAAAA,MAAA,MAAAM,MAAA,IA0FoCX,KAAA,CAAAY,QAAQ,GAAAD,MAAA;IAAEE,QAAQ,EAAR;iDAAVb,KAAA,CAAAY,QAAQ,E,GAAWE,UAAI,EACnDC,UAAwB,E,gBACxBnB,mBAAA,CAAmD;IAA5CC,IAAI,EAAC,UAAU;IA5F9B,uBAAAQ,MAAA,QAAAA,MAAA,MAAAM,MAAA,IA4FwCX,KAAA,CAAAgB,QAAQ,GAAAL,MAAA;IAAEE,QAAQ,EAAR;iDAAVb,KAAA,CAAAgB,QAAQ,E,GAAWC,UAAI,EACvDC,UAAoC,C,4BAEtCC,YAAA,CAAkDC,sBAAA;IAArCC,EAAE,EAAC;EAAW;IA/FjCC,OAAA,EAAAC,QAAA,CA+FkC,MAAQ,CA/F1CC,gBAAA,CA+FkC,UAAQ,E;IA/F1CC,CAAA;yBAkGI3B,mBAAA,CAKM,OAvGV4B,UAAA,GAmGM9B,mBAAA,CAAuC;IAA9B+B,OAAK,EAAAtB,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAoB,MAAA,IAAApB,QAAA,CAAAoB,MAAA,IAAArB,IAAA,CAAM;KAAE,QAAM,GAChBP,KAAA,CAAAC,QAAQ,I,cAAtB4B,YAAA,CAA0BC,iBAAA;IApGhCnC,GAAA;EAAA,MAAAoC,mBAAA,gBAqG6B/B,KAAA,CAAAC,QAAQ,I,cAA/B4B,YAAA,CAAmCG,0BAAA;IArGzCrC,GAAA;EAAA,MAAAoC,mBAAA,gBAsGyB/B,KAAA,CAAAC,QAAQ,I,cAA3B4B,YAAA,CAA+BI,sBAAA;IAtGrCtC,GAAA;EAAA,MAAAoC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}