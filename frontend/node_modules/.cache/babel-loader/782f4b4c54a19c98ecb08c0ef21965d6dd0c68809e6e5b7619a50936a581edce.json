{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      username: '',\n      password: ''\n    };\n  },\n  methods: {\n    async register() {\n      try {\n        const response = await fetch('http://localhost:5000/register', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            username: this.username,\n            password: this.password\n          })\n        });\n        if (response.ok) {\n          alert('Registration successful!');\n          this.$router.push('/login');\n        } else {\n          const data = await response.json();\n          alert('Registration failed: ' + data.error);\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","username","password","methods","register","response","fetch","method","headers","body","JSON","stringify","ok","alert","$router","push","json","error","console"],"sources":["B:\\Kyro Project\\Speech Recognition Project\\frontend\\src\\components\\Register.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h2>Register</h2>\r\n      <form @submit.prevent=\"register\">\r\n        <label>Username:</label>\r\n        <input type=\"text\" v-model=\"username\" required><br>\r\n        <label>Password:</label>\r\n        <input type=\"password\" v-model=\"password\" required><br>\r\n        <button type=\"submit\">Register</button>\r\n      </form>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        username: '',\r\n        password: ''\r\n      };\r\n    },\r\n    methods: {\r\n      async register() {\r\n        try {\r\n          const response = await fetch('http://localhost:5000/register', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ username: this.username, password: this.password })\r\n          });\r\n          if (response.ok) {\r\n            alert('Registration successful!');\r\n            this.$router.push('/login');\r\n          } else {\r\n            const data = await response.json();\r\n            alert('Registration failed: ' + data.error);\r\n          }\r\n        } catch (error) {\r\n          console.error('Error:', error);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* Add your styles here */\r\n  </style>"],"mappings":";AAcE,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,QAAQA,CAAA,EAAG;MACf,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,gCAAgC,EAAE;UAC7DC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEV,QAAQ,EAAE,IAAI,CAACA,QAAQ;YAAEC,QAAQ,EAAE,IAAI,CAACA;UAAS,CAAC;QAC3E,CAAC,CAAC;QACF,IAAIG,QAAQ,CAACO,EAAE,EAAE;UACfC,KAAK,CAAC,0BAA0B,CAAC;UACjC,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;QAC7B,OAAO;UACL,MAAMf,IAAG,GAAI,MAAMK,QAAQ,CAACW,IAAI,CAAC,CAAC;UAClCH,KAAK,CAAC,uBAAsB,GAAIb,IAAI,CAACiB,KAAK,CAAC;QAC7C;MACF,EAAE,OAAOA,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAChC;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}