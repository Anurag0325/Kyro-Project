{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      username: '',\n      password: ''\n    };\n  },\n  methods: {\n    async login() {\n      try {\n        const response = await fetch('http://localhost:5000/login', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            username: this.username,\n            password: this.password\n          }),\n          credentials: 'include' // Important for sending session cookies\n        });\n        if (response.ok) {\n          alert('Login successful!');\n          this.$router.push('/dashboard');\n        } else {\n          const data = await response.json();\n          alert('Login failed: ' + data.error);\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","username","password","methods","login","response","fetch","method","headers","body","JSON","stringify","credentials","ok","alert","$router","push","json","error","console"],"sources":["B:\\Kyro Project\\Speech Recognition Project\\frontend\\src\\components\\Login.vue"],"sourcesContent":["<!-- Login.vue -->\r\n<template>\r\n    <div>\r\n      <h2>Login</h2>\r\n      <form @submit.prevent=\"login\">\r\n        <label>Username:</label>\r\n        <input type=\"text\" v-model=\"username\" required><br>\r\n        <label>Password:</label>\r\n        <input type=\"password\" v-model=\"password\" required><br>\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n      <router-link to=\"/register\">Register</router-link>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        username: '',\r\n        password: ''\r\n      };\r\n    },\r\n    methods: {\r\n      async login() {\r\n        try {\r\n          const response = await fetch('http://localhost:5000/login', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ username: this.username, password: this.password }),\r\n            credentials: 'include' // Important for sending session cookies\r\n          });\r\n          if (response.ok) {\r\n            alert('Login successful!');\r\n            this.$router.push('/dashboard');\r\n          } else {\r\n            const data = await response.json();\r\n            alert('Login failed: ' + data.error);\r\n          }\r\n        } catch (error) {\r\n          console.error('Error:', error);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n.login-container {\r\n  max-width: 400px;\r\n  margin: auto;\r\n  padding: 20px;\r\n  border: 1px solid #ccc;\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.login-form {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.login-btn {\r\n  background-color: #4caf50;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n}\r\n\r\n.login-btn:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.router-link {\r\n  display: block;\r\n  margin-top: 10px;\r\n  text-decoration: none;\r\n  color: blue;\r\n}\r\n\r\n.router-link:hover {\r\n  text-decoration: underline;\r\n}\r\n</style>\r\n  "],"mappings":";AAgBE,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,KAAKA,CAAA,EAAG;MACZ,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,6BAA6B,EAAE;UAC1DC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEV,QAAQ,EAAE,IAAI,CAACA,QAAQ;YAAEC,QAAQ,EAAE,IAAI,CAACA;UAAS,CAAC,CAAC;UAC1EU,WAAW,EAAE,SAAQ,CAAE;QACzB,CAAC,CAAC;QACF,IAAIP,QAAQ,CAACQ,EAAE,EAAE;UACfC,KAAK,CAAC,mBAAmB,CAAC;UAC1B,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,YAAY,CAAC;QACjC,OAAO;UACL,MAAMhB,IAAG,GAAI,MAAMK,QAAQ,CAACY,IAAI,CAAC,CAAC;UAClCH,KAAK,CAAC,gBAAe,GAAId,IAAI,CAACkB,KAAK,CAAC;QACtC;MACF,EAAE,OAAOA,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAChC;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}