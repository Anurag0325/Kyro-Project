{"ast":null,"code":"import Record from './components/Record.vue';\nexport default {\n  name: 'App',\n  components: {\n    Record\n  }\n};","map":{"version":3,"names":["Record","name","components"],"sources":["B:\\Kyro Project\\Speech Recognition Project\\frontend\\src\\App.vue"],"sourcesContent":["<!-- <template>\n  <div id=\"app\">\n    <h1>{{ message }}</h1>\n    <button @click=\"recordAndTranslate\">Record and Translate</button>\n    <div v-if=\"transcription\">\n      <p>Recognized: {{ transcription.recognized }}</p>\n      <p>Translated: {{ transcription.translated }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App',\n  data() {\n    return {\n      message: 'Welcome to Speech Recognition and Translation App!',\n      transcription: null\n    };\n  },\n  methods: {\n    async recordAndTranslate() {\n      try {\n        // Simulating speech recognition input\n        const text = \"Hello, how are you?\";\n        const response = await fetch('/record', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({ text })\n        });\n        const data = await response.json();\n        this.transcription = {\n          recognized: data.recognized,\n          translated: data.translated\n        };\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    }\n  }\n};\n</script>\n\n<style>\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style> -->\n\n<template>\n  <div id=\"app\">\n    <Record />\n  </div>\n</template>\n\n<script>\nimport Record from './components/Record.vue';\n\nexport default {\n  name: 'App',\n  components: {\n    Record,\n  },\n};\n</script>\n\n<style>\n/* Add your styles here */\n</style>\n\n"],"mappings":"AA+DA,OAAOA,MAAK,MAAO,yBAAyB;AAE5C,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,UAAU,EAAE;IACVF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}