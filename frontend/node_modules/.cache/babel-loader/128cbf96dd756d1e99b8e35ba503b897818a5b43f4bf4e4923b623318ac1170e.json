{"ast":null,"code":"export default {\n  data() {\n    return {\n      recognizedText: '',\n      translatedText: '',\n      recording: false,\n      recognition: null\n    };\n  },\n  methods: {\n    async recordAndTranslate() {\n      if (this.recording) return; // Prevent multiple recordings\n\n      this.recording = true;\n      this.recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();\n      this.recognition.lang = 'en-US';\n      this.recognition.interimResults = false;\n      this.recognition.maxAlternatives = 1;\n      this.recognition.start();\n      this.recognition.onresult = async event => {\n        const speechResult = event.results[0][0].transcript.trim();\n        console.log('Result: ', speechResult);\n        try {\n          const response = await fetch('/record', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              text: speechResult\n            })\n          });\n          if (response.ok) {\n            const data = await response.json();\n            this.recognizedText = data.recognized;\n            this.translatedText = data.translated;\n          } else {\n            console.error('Failed to fetch translation.');\n          }\n        } catch (error) {\n          console.error('Error in fetch:', error);\n        } finally {\n          this.recognition.stop();\n          this.recording = false;\n        }\n      };\n      this.recognition.onerror = event => {\n        console.error('Error occurred in recognition: ', event.error);\n        this.recognition.stop();\n        this.recording = false;\n      };\n    }\n  },\n  beforeDestroy() {\n    if (this.recognition) {\n      this.recognition.stop();\n    }\n  }\n};","map":{"version":3,"names":["data","recognizedText","translatedText","recording","recognition","methods","recordAndTranslate","window","SpeechRecognition","webkitSpeechRecognition","lang","interimResults","maxAlternatives","start","onresult","event","speechResult","results","transcript","trim","console","log","response","fetch","method","headers","body","JSON","stringify","text","ok","json","recognized","translated","error","stop","onerror","beforeDestroy"],"sources":["B:\\Kyro Project\\Speech Recognition Project\\frontend\\src\\components\\Record.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Speech Recognition and Translation App</h1>\r\n    <button @click=\"recordAndTranslate\" :disabled=\"recording\">Record and Translate</button>\r\n    <p v-if=\"recognizedText\">Recognized: {{ recognizedText }}</p>\r\n    <p v-if=\"translatedText\">Translated: {{ translatedText }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      recognizedText: '',\r\n      translatedText: '',\r\n      recording: false,\r\n      recognition: null,\r\n    };\r\n  },\r\n  methods: {\r\n    async recordAndTranslate() {\r\n      if (this.recording) return; // Prevent multiple recordings\r\n\r\n      this.recording = true;\r\n      this.recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();\r\n      this.recognition.lang = 'en-US';\r\n      this.recognition.interimResults = false;\r\n      this.recognition.maxAlternatives = 1;\r\n\r\n      this.recognition.start();\r\n\r\n      this.recognition.onresult = async (event) => {\r\n        const speechResult = event.results[0][0].transcript.trim();\r\n        console.log('Result: ', speechResult);\r\n\r\n        try {\r\n          const response = await fetch('/record', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ text: speechResult }),\r\n          });\r\n\r\n          if (response.ok) {\r\n            const data = await response.json();\r\n            this.recognizedText = data.recognized;\r\n            this.translatedText = data.translated;\r\n          } else {\r\n            console.error('Failed to fetch translation.');\r\n          }\r\n        } catch (error) {\r\n          console.error('Error in fetch:', error);\r\n        } finally {\r\n          this.recognition.stop();\r\n          this.recording = false;\r\n        }\r\n      };\r\n\r\n      this.recognition.onerror = (event) => {\r\n        console.error('Error occurred in recognition: ', event.error);\r\n        this.recognition.stop();\r\n        this.recording = false;\r\n      };\r\n    },\r\n  },\r\n  beforeDestroy() {\r\n    if (this.recognition) {\r\n      this.recognition.stop();\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n/* Add your styles here */\r\n</style>\r\n"],"mappings":"AAUA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,cAAc,EAAE,EAAE;MAClBC,cAAc,EAAE,EAAE;MAClBC,SAAS,EAAE,KAAK;MAChBC,WAAW,EAAE;IACf,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,kBAAkBA,CAAA,EAAG;MACzB,IAAI,IAAI,CAACH,SAAS,EAAE,OAAM,CAAE;;MAE5B,IAAI,CAACA,SAAQ,GAAI,IAAI;MACrB,IAAI,CAACC,WAAU,GAAI,KAAKG,MAAM,CAACC,iBAAgB,IAAKD,MAAM,CAACE,uBAAuB,EAAE,CAAC;MACrF,IAAI,CAACL,WAAW,CAACM,IAAG,GAAI,OAAO;MAC/B,IAAI,CAACN,WAAW,CAACO,cAAa,GAAI,KAAK;MACvC,IAAI,CAACP,WAAW,CAACQ,eAAc,GAAI,CAAC;MAEpC,IAAI,CAACR,WAAW,CAACS,KAAK,CAAC,CAAC;MAExB,IAAI,CAACT,WAAW,CAACU,QAAO,GAAI,MAAOC,KAAK,IAAK;QAC3C,MAAMC,YAAW,GAAID,KAAK,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACC,UAAU,CAACC,IAAI,CAAC,CAAC;QAC1DC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEL,YAAY,CAAC;QAErC,IAAI;UACF,MAAMM,QAAO,GAAI,MAAMC,KAAK,CAAC,SAAS,EAAE;YACtCC,MAAM,EAAE,MAAM;YACdC,OAAO,EAAE;cACP,cAAc,EAAE;YAClB,CAAC;YACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;cAAEC,IAAI,EAAEb;YAAa,CAAC;UAC7C,CAAC,CAAC;UAEF,IAAIM,QAAQ,CAACQ,EAAE,EAAE;YACf,MAAM9B,IAAG,GAAI,MAAMsB,QAAQ,CAACS,IAAI,CAAC,CAAC;YAClC,IAAI,CAAC9B,cAAa,GAAID,IAAI,CAACgC,UAAU;YACrC,IAAI,CAAC9B,cAAa,GAAIF,IAAI,CAACiC,UAAU;UACvC,OAAO;YACLb,OAAO,CAACc,KAAK,CAAC,8BAA8B,CAAC;UAC/C;QACF,EAAE,OAAOA,KAAK,EAAE;UACdd,OAAO,CAACc,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;QACzC,UAAU;UACR,IAAI,CAAC9B,WAAW,CAAC+B,IAAI,CAAC,CAAC;UACvB,IAAI,CAAChC,SAAQ,GAAI,KAAK;QACxB;MACF,CAAC;MAED,IAAI,CAACC,WAAW,CAACgC,OAAM,GAAKrB,KAAK,IAAK;QACpCK,OAAO,CAACc,KAAK,CAAC,iCAAiC,EAAEnB,KAAK,CAACmB,KAAK,CAAC;QAC7D,IAAI,CAAC9B,WAAW,CAAC+B,IAAI,CAAC,CAAC;QACvB,IAAI,CAAChC,SAAQ,GAAI,KAAK;MACxB,CAAC;IACH;EACF,CAAC;EACDkC,aAAaA,CAAA,EAAG;IACd,IAAI,IAAI,CAACjC,WAAW,EAAE;MACpB,IAAI,CAACA,WAAW,CAAC+B,IAAI,CAAC,CAAC;IACzB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}