{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      username: '',\n      password: ''\n    };\n  },\n  methods: {\n    async login() {\n      try {\n        const response = await fetch('http://localhost:5000/login', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            username: this.username,\n            password: this.password\n          }),\n          credentials: 'include'\n        });\n        if (response.ok) {\n          alert('Login successful!');\n          this.$router.push('/dashboard');\n        } else {\n          const data = await response.json();\n          alert('Login failed: ' + data.error);\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    },\n    goToRegister() {\n      this.$router.push('/register');\n    }\n  }\n};","map":{"version":3,"names":["data","username","password","methods","login","response","fetch","method","headers","body","JSON","stringify","credentials","ok","alert","$router","push","json","error","console","goToRegister"],"sources":["B:\\Kyro Project\\Voice Analyzer\\frontend\\src\\components\\Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <h2>Login</h2>\r\n    <form @submit.prevent=\"login\" class=\"login-form\">\r\n      <label class=\"form-label\">Username:</label>\r\n      <input type=\"text\" v-model=\"username\" class=\"form-input\" required><br>\r\n      <label class=\"form-label\">Password:</label>\r\n      <input type=\"password\" v-model=\"password\" class=\"form-input\" required><br>\r\n      <button type=\"submit\" class=\"login-btn\">Login</button>\r\n    </form>\r\n    <button @click=\"goToRegister\" class=\"register-btn\">Register</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      username: '',\r\n      password: ''\r\n    };\r\n  },\r\n  methods: {\r\n    async login() {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/login', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ username: this.username, password: this.password }),\r\n          credentials: 'include'\r\n        });\r\n        if (response.ok) {\r\n          alert('Login successful!');\r\n          this.$router.push('/dashboard');\r\n        } else {\r\n          const data = await response.json();\r\n          alert('Login failed: ' + data.error);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n      }\r\n    },\r\n    goToRegister() {\r\n      this.$router.push('/register');\r\n    }\r\n  }\r\n};\r\n</script>\r\n  \r\n<style scoped>\r\n.login-container {\r\n  max-width: 400px;\r\n  margin: auto;\r\n  padding: 20px;\r\n  border: 1px solid #ccc;\r\n  background-color: #f9f9f9;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.login-form {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.form-label {\r\n  display: block;\r\n  margin-bottom: 8px;\r\n  color: #333;\r\n  font-size: 16px;\r\n}\r\n\r\n.form-input {\r\n  width: calc(100% - 22px);\r\n  padding: 10px;\r\n  font-size: 16px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  transition: border-color 0.3s ease;\r\n}\r\n\r\n.form-input:focus {\r\n  outline: none;\r\n  border-color: #4CAF50;\r\n}\r\n\r\n.login-btn {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  padding: 12px 20px;\r\n  margin-top: 10px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  border-radius: 4px;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.login-btn:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.register-btn {\r\n  background-color: #2196F3;\r\n  color: white;\r\n  border: none;\r\n  padding: 12px 20px;\r\n  margin-top: 10px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  border-radius: 4px;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.register-btn:hover {\r\n  background-color: #0b7dda;\r\n}\r\n\r\n.router-link {\r\n  display: block;\r\n  margin-top: 10px;\r\n  text-decoration: none;\r\n  color: blue;\r\n}\r\n\r\n.router-link:hover {\r\n  text-decoration: underline;\r\n}\r\n</style>"],"mappings":";AAeA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,KAAKA,CAAA,EAAG;MACZ,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,6BAA6B,EAAE;UAC1DC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEV,QAAQ,EAAE,IAAI,CAACA,QAAQ;YAAEC,QAAQ,EAAE,IAAI,CAACA;UAAS,CAAC,CAAC;UAC1EU,WAAW,EAAE;QACf,CAAC,CAAC;QACF,IAAIP,QAAQ,CAACQ,EAAE,EAAE;UACfC,KAAK,CAAC,mBAAmB,CAAC;UAC1B,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,YAAY,CAAC;QACjC,OAAO;UACL,MAAMhB,IAAG,GAAI,MAAMK,QAAQ,CAACY,IAAI,CAAC,CAAC;UAClCH,KAAK,CAAC,gBAAe,GAAId,IAAI,CAACkB,KAAK,CAAC;QACtC;MACF,EAAE,OAAOA,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAChC;IACF,CAAC;IACDE,YAAYA,CAAA,EAAG;MACb,IAAI,CAACL,OAAO,CAACC,IAAI,CAAC,WAAW,CAAC;IAChC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}