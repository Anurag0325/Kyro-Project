{"ast":null,"code":"export default {\n  props: {\n    wordFrequencies: {\n      type: Object,\n      required: true\n    }\n  }\n};","map":{"version":3,"names":["props","wordFrequencies","type","Object","required"],"sources":["B:\\Kyro Project\\Voice Analyzer\\frontend\\src\\components\\WordFrequencies.vue"],"sourcesContent":["<!-- <template>\r\n    <div>\r\n      <h1>Word Frequencies</h1>\r\n      <button @click=\"fetchWordFrequencies\">Load Word Frequencies</button>\r\n      <div v-if=\"wordFrequencies\">\r\n        <h2>Current User Word Frequencies</h2>\r\n        <table>\r\n          <tr>\r\n            <th>Word</th>\r\n            <th>Frequency</th>\r\n            <th>Overall Frequency</th>\r\n          </tr>\r\n          <tr v-for=\"(frequency, word) in wordFrequencies.user_word_freq\" :key=\"word\">\r\n            <td>{{ word }}</td>\r\n            <td>{{ frequency }}</td>\r\n            <td>{{ wordFrequencies.all_word_freq[word] || 0 }}</td>\r\n          </tr>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        wordFrequencies: null,\r\n      };\r\n    },\r\n    methods: {\r\n      async fetchWordFrequencies() {\r\n        try {\r\n          // const response = await fetch(`http://localhost:5000/word-frequencies?user_id=${this.userId}`);\r\n          const response = await fetch('http://localhost:5000/word-frequencies', {\r\n            method: 'GET',\r\n            credentials: 'include'\r\n          });\r\n          if (response.ok) {\r\n            this.wordFrequencies = await response.json();\r\n          } else {\r\n            console.error('Failed to fetch word frequencies:', await response.json());\r\n          }\r\n        } catch (error) {\r\n          console.error('Error:', error);\r\n        }\r\n      },\r\n      // startPolling() {\r\n      //   this.fetchWordFrequencies();\r\n      //   setInterval(this.fetchWordFrequencies, 2000); // Poll every 2 seconds\r\n      // }\r\n    },\r\n    // mounted() {\r\n    //   this.startPolling();\r\n    // }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n  }\r\n  th, td {\r\n    border: 1px solid #ddd;\r\n    padding: 8px;\r\n  }\r\n  th {\r\n    background-color: #f2f2f2;\r\n  }\r\n  </style>\r\n   -->\r\n\r\n   <!-- <template>\r\n    <div>\r\n      <h1>Word Frequencies</h1>\r\n      <button @click=\"fetchWordFrequencies\">Load Word Frequencies</button>\r\n      <div v-if=\"wordFrequencies\">\r\n        <h2>Current User Word Frequencies</h2>\r\n        <table>\r\n          <tr>\r\n            <th>Word</th>\r\n            <th>Frequency</th>\r\n            <th>Overall Frequency</th>\r\n          </tr>\r\n          <tr v-for=\"(frequency, word) in wordFrequencies.user_word_freq\" :key=\"word\">\r\n            <td>{{ word }}</td>\r\n            <td>{{ frequency }}</td>\r\n            <td>{{ wordFrequencies.all_word_freq[word] || 0 }}</td>\r\n          </tr>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        wordFrequencies: null,\r\n      };\r\n    },\r\n    methods: {\r\n      async fetchWordFrequencies() {\r\n        try {\r\n          console.log('Fetching word frequencies...');\r\n          const response = await fetch('http://localhost:5000/word-frequencies', {\r\n            method: 'GET',\r\n            credentials: 'include'\r\n          });\r\n          console.log('Response received:', response);\r\n          if (response.ok) {\r\n            const data = await response.json();\r\n            console.log('Data received:', data);\r\n            this.wordFrequencies = data;\r\n          } else {\r\n            const errorData = await response.json();\r\n            console.error('Failed to fetch word frequencies:', errorData);\r\n          }\r\n        } catch (error) {\r\n          console.error('Error:', error);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n  }\r\n  th, td {\r\n    border: 1px solid #ddd;\r\n    padding: 8px;\r\n  }\r\n  th {\r\n    background-color: #f2f2f2;\r\n  }\r\n  </style>\r\n   -->\r\n\r\n\r\n   <template>\r\n    <div class=\"word-frequencies-container\">\r\n      <h1>Word Frequencies</h1>\r\n      <div v-if=\"wordFrequencies\" class=\"table-container\">\r\n        <h2>Current User Word Frequencies</h2>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Word</th>\r\n              <th>Frequency</th>\r\n              <th>Overall Frequency</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"(frequency, word) in wordFrequencies.user_word_freq\" :key=\"word\">\r\n              <td>{{ word }}</td>\r\n              <td>{{ frequency }}</td>\r\n              <td>{{ wordFrequencies.all_word_freq[word] || 0 }}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    props: {\r\n      wordFrequencies: {\r\n        type: Object,\r\n        required: true,\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n.word-frequencies-container {\r\n  max-width: 800px;\r\n  margin: auto;\r\n  padding: 20px;\r\n}\r\n\r\n.table-container {\r\n  margin-top: 20px;\r\n}\r\n\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\nth, td {\r\n  border: 1px solid #ddd;\r\n  padding: 8px;\r\n}\r\n\r\nth {\r\n  background-color: #f2f2f2;\r\n}\r\n</style>\r\n  "],"mappings":"AAwKE,eAAe;EACbA,KAAK,EAAE;IACLC,eAAe,EAAE;MACfC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}