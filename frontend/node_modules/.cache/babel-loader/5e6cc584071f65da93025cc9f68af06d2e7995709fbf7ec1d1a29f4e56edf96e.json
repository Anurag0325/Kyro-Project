{"ast":null,"code":"export default {\n  data() {\n    return {\n      username: '',\n      password: '',\n      email: ''\n    };\n  },\n  methods: {\n    async register() {\n      try {\n        const response = await fetch('http://localhost:5000/register', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            username: this.username,\n            password: this.password,\n            email: this.email\n          })\n        });\n        if (response.ok) {\n          const data = await response.json();\n          console.log('Registration successful:', data);\n          // Redirect to login or perform other actions\n        } else {\n          const errorData = await response.json();\n          console.error('Registration failed:', errorData);\n        }\n      } catch (error) {\n        console.error('Error registering user:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","username","password","email","methods","register","response","fetch","method","headers","body","JSON","stringify","ok","json","console","log","errorData","error"],"sources":["B:\\Kyro Project\\Speech Recognition Project\\frontend\\src\\components\\Register.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h1>Register</h1>\r\n      <form @submit.prevent=\"register\">\r\n        <label>Username:</label>\r\n        <input type=\"text\" v-model=\"username\" required><br>\r\n        <label>Password:</label>\r\n        <input type=\"password\" v-model=\"password\" required><br>\r\n        <label>Email:</label>\r\n        <input type=\"email\" v-model=\"email\" required><br>\r\n        <button type=\"submit\">Register</button>\r\n      </form>\r\n      <router-link to=\"/\">Back to Login</router-link>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        username: '',\r\n        password: '',\r\n        email: ''\r\n      };\r\n    },\r\n    methods: {\r\n      async register() {\r\n        try {\r\n          const response = await fetch('http://localhost:5000/register', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n              username: this.username,\r\n              password: this.password,\r\n              email: this.email,\r\n            })\r\n          });\r\n          if (response.ok) {\r\n            const data = await response.json();\r\n            console.log('Registration successful:', data);\r\n            // Redirect to login or perform other actions\r\n          } else {\r\n            const errorData = await response.json();\r\n            console.error('Registration failed:', errorData);\r\n          }\r\n        } catch (error) {\r\n          console.error('Error registering user:', error);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n.register-container {\r\n  max-width: 400px;\r\n  margin: auto;\r\n  padding: 20px;\r\n  border: 1px solid #ccc;\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.register-form {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.register-btn {\r\n  background-color: #4caf50;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n}\r\n\r\n.register-btn:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.router-link {\r\n  display: block;\r\n  margin-top: 10px;\r\n  text-decoration: none;\r\n  color: blue;\r\n}\r\n\r\n.router-link:hover {\r\n  text-decoration: underline;\r\n}\r\n</style>\r\n  \r\n\r\n\r\n  <!-- <router-link to=\"/\">Back to Login</router-link> -->"],"mappings":"AAiBE,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,QAAQA,CAAA,EAAG;MACf,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,gCAAgC,EAAE;UAC7DC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBX,QAAQ,EAAE,IAAI,CAACA,QAAQ;YACvBC,QAAQ,EAAE,IAAI,CAACA,QAAQ;YACvBC,KAAK,EAAE,IAAI,CAACA;UACd,CAAC;QACH,CAAC,CAAC;QACF,IAAIG,QAAQ,CAACO,EAAE,EAAE;UACf,MAAMb,IAAG,GAAI,MAAMM,QAAQ,CAACQ,IAAI,CAAC,CAAC;UAClCC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEhB,IAAI,CAAC;UAC7C;QACF,OAAO;UACL,MAAMiB,SAAQ,GAAI,MAAMX,QAAQ,CAACQ,IAAI,CAAC,CAAC;UACvCC,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAED,SAAS,CAAC;QAClD;MACF,EAAE,OAAOC,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}