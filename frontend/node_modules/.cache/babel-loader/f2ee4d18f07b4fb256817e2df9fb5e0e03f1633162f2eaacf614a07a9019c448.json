{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Record from './components/Record.vue';\nimport WordFrequencies from './components/WordFrequencies.vue';\nimport Top3Phrases from './components/Top3Phrases.vue';\nexport default {\n  name: 'App',\n  components: {\n    Record,\n    WordFrequencies,\n    Top3Phrases\n  },\n  data() {\n    return {\n      loggedIn: false,\n      username: '',\n      password: ''\n    };\n  },\n  methods: {\n    async login() {\n      try {\n        const response = await fetch('http://localhost:5000/login', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            username: this.username,\n            password: this.password\n          })\n        });\n        if (response.ok) {\n          alert('Login successful!');\n          this.loggedIn = true;\n          this.$router.push('/');\n        } else {\n          const data = await response.json();\n          alert('Login failed: ' + data.error);\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    },\n    async logout() {\n      try {\n        const response = await fetch('http://localhost:5000/logout', {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        if (response.ok) {\n          alert('Logged out successfully!');\n          this.loggedIn = false;\n          this.$router.push('/');\n        } else {\n          const data = await response.json();\n          alert('Logout failed: ' + data.error);\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    }\n  },\n  created() {\n    // Check if user is already logged in\n    const token = localStorage.getItem('token');\n    if (token) {\n      this.loggedIn = true;\n    }\n  }\n};","map":{"version":3,"names":["Record","WordFrequencies","Top3Phrases","name","components","data","loggedIn","username","password","methods","login","response","fetch","method","headers","body","JSON","stringify","ok","alert","$router","push","json","error","console","logout","localStorage","getItem","created","token"],"sources":["B:\\Kyro Project\\Speech Recognition Project\\frontend\\src\\App.vue"],"sourcesContent":["<!-- <template>\n  <div id=\"app\">\n    <h1>{{ message }}</h1>\n    <button @click=\"recordAndTranslate\">Record and Translate</button>\n    <div v-if=\"transcription\">\n      <p>Recognized: {{ transcription.recognized }}</p>\n      <p>Translated: {{ transcription.translated }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App',\n  data() {\n    return {\n      message: 'Welcome to Speech Recognition and Translation App!',\n      transcription: null\n    };\n  },\n  methods: {\n    async recordAndTranslate() {\n      try {\n        // Simulating speech recognition input\n        const text = \"Hello, how are you?\";\n        const response = await fetch('/record', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({ text })\n        });\n        const data = await response.json();\n        this.transcription = {\n          recognized: data.recognized,\n          translated: data.translated\n        };\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    }\n  }\n};\n</script>\n\n<style>\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style> -->\n\n<!-- <template>\n  <div id=\"app\">\n    <Record />\n    <WordFrequencies />\n    <Top3Phrases />\n  </div>\n</template>\n\n<script>\nimport Record from './components/Record.vue';\nimport WordFrequencies from './components/WordFrequencies.vue';\nimport Top3Phrases from './components/Top3Phrases.vue';\n\nexport default {\n  name: 'App',\n  components: {\n    Record,\n    WordFrequencies,\n    Top3Phrases,\n  },\n};\n</script>\n\n<style>\n/* Add your styles here */\n</style> -->\n\n\n<template>\n  <div id=\"app\">\n    <div v-if=\"!loggedIn\">\n      <h2>Login</h2>\n      <form @submit.prevent=\"login\">\n        <label>Username:</label>\n        <input type=\"text\" v-model=\"username\" required><br>\n        <label>Password:</label>\n        <input type=\"password\" v-model=\"password\" required><br>\n        <button type=\"submit\">Login</button>\n      </form>\n      <router-link to=\"/register\">Register</router-link>\n    </div>\n\n    <div v-else>\n      <button @click=\"logout\">Logout</button>\n      <Record v-if=\"loggedIn\" />\n      <WordFrequencies v-if=\"loggedIn\" />\n      <Top3Phrases v-if=\"loggedIn\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport Record from './components/Record.vue';\nimport WordFrequencies from './components/WordFrequencies.vue';\nimport Top3Phrases from './components/Top3Phrases.vue';\n\nexport default {\n  name: 'App',\n  components: {\n    Record,\n    WordFrequencies,\n    Top3Phrases,\n  },\n  data() {\n    return {\n      loggedIn: false,\n      username: '',\n      password: ''\n    };\n  },\n  methods: {\n    async login() {\n      try {\n        const response = await fetch('http://localhost:5000/login', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ username: this.username, password: this.password })\n        });\n        if (response.ok) {\n          alert('Login successful!');\n          this.loggedIn = true;\n          this.$router.push('/');\n        } else {\n          const data = await response.json();\n          alert('Login failed: ' + data.error);\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    },\n    async logout() {\n      try {\n        const response = await fetch('http://localhost:5000/logout', {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        if (response.ok) {\n          alert('Logged out successfully!');\n          this.loggedIn = false;\n          this.$router.push('/');\n        } else {\n          const data = await response.json();\n          alert('Logout failed: ' + data.error);\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    }\n  },\n  created() {\n    // Check if user is already logged in\n    const token = localStorage.getItem('token');\n    if (token) {\n      this.loggedIn = true;\n    }\n  }\n};\n</script>\n\n<style>\n/* Add your styles here */\n</style>\n\n"],"mappings":";AA4GA,OAAOA,MAAK,MAAO,yBAAyB;AAC5C,OAAOC,eAAc,MAAO,kCAAkC;AAC9D,OAAOC,WAAU,MAAO,8BAA8B;AAEtD,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,UAAU,EAAE;IACVJ,MAAM;IACNC,eAAe;IACfC;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,KAAK;MACfC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,KAAKA,CAAA,EAAG;MACZ,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,6BAA6B,EAAE;UAC1DC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEV,QAAQ,EAAE,IAAI,CAACA,QAAQ;YAAEC,QAAQ,EAAE,IAAI,CAACA;UAAS,CAAC;QAC3E,CAAC,CAAC;QACF,IAAIG,QAAQ,CAACO,EAAE,EAAE;UACfC,KAAK,CAAC,mBAAmB,CAAC;UAC1B,IAAI,CAACb,QAAO,GAAI,IAAI;UACpB,IAAI,CAACc,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;QACxB,OAAO;UACL,MAAMhB,IAAG,GAAI,MAAMM,QAAQ,CAACW,IAAI,CAAC,CAAC;UAClCH,KAAK,CAAC,gBAAe,GAAId,IAAI,CAACkB,KAAK,CAAC;QACtC;MACF,EAAE,OAAOA,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAChC;IACF,CAAC;IACD,MAAME,MAAMA,CAAA,EAAG;MACb,IAAI;QACF,MAAMd,QAAO,GAAI,MAAMC,KAAK,CAAC,8BAA8B,EAAE;UAC3DC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACP,eAAe,EAAE,UAAUY,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;UAC1D;QACF,CAAC,CAAC;QACF,IAAIhB,QAAQ,CAACO,EAAE,EAAE;UACfC,KAAK,CAAC,0BAA0B,CAAC;UACjC,IAAI,CAACb,QAAO,GAAI,KAAK;UACrB,IAAI,CAACc,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;QACxB,OAAO;UACL,MAAMhB,IAAG,GAAI,MAAMM,QAAQ,CAACW,IAAI,CAAC,CAAC;UAClCH,KAAK,CAAC,iBAAgB,GAAId,IAAI,CAACkB,KAAK,CAAC;QACvC;MACF,EAAE,OAAOA,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAChC;IACF;EACF,CAAC;EACDK,OAAOA,CAAA,EAAG;IACR;IACA,MAAMC,KAAI,GAAIH,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIE,KAAK,EAAE;MACT,IAAI,CAACvB,QAAO,GAAI,IAAI;IACtB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}