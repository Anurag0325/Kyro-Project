{"ast":null,"code":"export default {\n  data() {\n    return {\n      recognizedText: null,\n      translatedText: null\n    };\n  },\n  methods: {\n    async recordAndTranslate() {\n      try {\n        const response = await fetch('http://localhost:5000/record', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          credentials: 'include'\n        });\n        if (response.ok) {\n          const data = await response.json();\n          this.recognizedText = data.recognized;\n          this.translatedText = data.translated;\n          this.$emit('dataUpdated');\n        } else {\n          console.error('Failed to fetch translation.');\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","recognizedText","translatedText","methods","recordAndTranslate","response","fetch","method","headers","credentials","ok","json","recognized","translated","$emit","console","error"],"sources":["B:\\Kyro Project\\Voice\\frontend\\src\\components\\Record.vue"],"sourcesContent":["<template>\r\n  <div class=\"record-container\">\r\n    <h1 class=\"heading\">Record and Translate</h1>\r\n    <button @click=\"recordAndTranslate\" class=\"record-btn\">Record and Translate</button>\r\n    <div v-if=\"recognizedText\" class=\"result-container\">\r\n      <p class=\"result-text\"><strong>Recognized:</strong> {{ recognizedText }}</p>\r\n      <p class=\"result-text\"><strong>Translated:</strong> {{ translatedText }}</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      recognizedText: null,\r\n      translatedText: null,\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    async recordAndTranslate() {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/record', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          credentials: 'include'\r\n        });\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          this.recognizedText = data.recognized;\r\n          this.translatedText = data.translated;\r\n          this.$emit('dataUpdated');\r\n        } else {\r\n          console.error('Failed to fetch translation.');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.record-container {\r\n  max-width: 600px;\r\n  margin: 40px auto;\r\n  padding: 20px;\r\n  border: 1px solid #ddd;\r\n  background-color: #f9f9f9;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  border-radius: 8px;\r\n  text-align: center;\r\n}\r\n\r\n.heading {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.record-btn {\r\n  background-color: #4caf50;\r\n  color: white;\r\n  border: none;\r\n  padding: 12px 24px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n  border-radius: 4px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.record-btn:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.result-container {\r\n  margin-top: 20px;\r\n  border: 1px solid #ccc;\r\n  padding: 15px;\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  text-align: left;\r\n}\r\n\r\n.result-text {\r\n  font-size: 18px;\r\n  margin: 10px 0;\r\n}\r\n</style>"],"mappings":"AAYA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,cAAc,EAAE,IAAI;MACpBC,cAAc,EAAE;IAClB,CAAC;EACH,CAAC;EAEDC,OAAO,EAAE;IACP,MAAMC,kBAAkBA,CAAA,EAAG;MACzB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,8BAA8B,EAAE;UAC3DC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,WAAW,EAAE;QACf,CAAC,CAAC;QACF,IAAIJ,QAAQ,CAACK,EAAE,EAAE;UACf,MAAMV,IAAG,GAAI,MAAMK,QAAQ,CAACM,IAAI,CAAC,CAAC;UAClC,IAAI,CAACV,cAAa,GAAID,IAAI,CAACY,UAAU;UACrC,IAAI,CAACV,cAAa,GAAIF,IAAI,CAACa,UAAU;UACrC,IAAI,CAACC,KAAK,CAAC,aAAa,CAAC;QAC3B,OAAO;UACLC,OAAO,CAACC,KAAK,CAAC,8BAA8B,CAAC;QAC/C;MACF,EAAE,OAAOA,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAChC;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}