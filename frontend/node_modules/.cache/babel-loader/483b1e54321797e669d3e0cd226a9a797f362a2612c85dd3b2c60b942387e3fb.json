{"ast":null,"code":"export default {\n  data() {\n    return {\n      wordFrequencies: null,\n      userId: 1 // Example user ID; in practice, retrieve this dynamically\n    };\n  },\n  methods: {\n    async fetchWordFrequencies() {\n      try {\n        const response = await fetch(`http://localhost:5000/word-frequencies?user_id=${this.userId}`);\n        if (response.ok) {\n          this.wordFrequencies = await response.json();\n        } else {\n          console.error('Failed to fetch word frequencies:', await response.json());\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","wordFrequencies","userId","methods","fetchWordFrequencies","response","fetch","ok","json","console","error"],"sources":["B:\\Kyro Project\\Speech Recognition Project\\frontend\\src\\components\\WordFrequencies.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h1>Word Frequencies</h1>\r\n      <button @click=\"fetchWordFrequencies\">Load Word Frequencies</button>\r\n      <div v-if=\"wordFrequencies\">\r\n        <h2>Current User Word Frequencies</h2>\r\n        <table>\r\n          <tr>\r\n            <th>Word</th>\r\n            <th>Frequency</th>\r\n            <th>Overall Frequency</th>\r\n          </tr>\r\n          <tr v-for=\"(frequency, word) in wordFrequencies.user_word_freq\" :key=\"word\">\r\n            <td>{{ word }}</td>\r\n            <td>{{ frequency }}</td>\r\n            <td>{{ wordFrequencies.all_word_freq[word] || 0 }}</td>\r\n          </tr>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        wordFrequencies: null,\r\n        userId: 1  // Example user ID; in practice, retrieve this dynamically\r\n      };\r\n    },\r\n    methods: {\r\n      async fetchWordFrequencies() {\r\n        try {\r\n          const response = await fetch(`http://localhost:5000/word-frequencies?user_id=${this.userId}`);\r\n          if (response.ok) {\r\n            this.wordFrequencies = await response.json();\r\n          } else {\r\n            console.error('Failed to fetch word frequencies:', await response.json());\r\n          }\r\n        } catch (error) {\r\n          console.error('Error:', error);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n  }\r\n  th, td {\r\n    border: 1px solid #ddd;\r\n    padding: 8px;\r\n  }\r\n  th {\r\n    background-color: #f2f2f2;\r\n  }\r\n  </style>\r\n  "],"mappings":"AAuBE,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,eAAe,EAAE,IAAI;MACrBC,MAAM,EAAE,EAAG;IACb,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,oBAAoBA,CAAA,EAAG;MAC3B,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,kDAAkD,IAAI,CAACJ,MAAM,EAAE,CAAC;QAC7F,IAAIG,QAAQ,CAACE,EAAE,EAAE;UACf,IAAI,CAACN,eAAc,GAAI,MAAMI,QAAQ,CAACG,IAAI,CAAC,CAAC;QAC9C,OAAO;UACLC,OAAO,CAACC,KAAK,CAAC,mCAAmC,EAAE,MAAML,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC;QAC3E;MACF,EAAE,OAAOE,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAChC;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}