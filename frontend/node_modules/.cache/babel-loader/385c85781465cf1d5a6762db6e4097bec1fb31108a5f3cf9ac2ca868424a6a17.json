{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h1\", null, _toDisplayString($data.message), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.recordAndTranslate && $options.recordAndTranslate(...args))\n  }, \"Record and Translate\"), $data.transcription ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"p\", null, \"Recognized: \" + _toDisplayString($data.transcription.recognized), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Translated: \" + _toDisplayString($data.transcription.translated), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["id","key","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","$data","message","onClick","_cache","args","$options","recordAndTranslate","transcription","_hoisted_2","recognized","translated","_createCommentVNode"],"sources":["B:\\Kyro Project\\Speech Recognition Project\\frontend\\src\\App.vue"],"sourcesContent":["<!-- <template>\n  <nav>\n    <router-link to=\"/\">Home</router-link> |\n    <router-link to=\"/about\">About</router-link>\n  </nav>\n  <router-view/>\n</template>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n\nnav {\n  padding: 30px;\n}\n\nnav a {\n  font-weight: bold;\n  color: #2c3e50;\n}\n\nnav a.router-link-exact-active {\n  color: #42b983;\n}\n</style> -->\n\n\n<template>\n  <div id=\"app\">\n    <h1>{{ message }}</h1>\n    <button @click=\"recordAndTranslate\">Record and Translate</button>\n    <div v-if=\"transcription\">\n      <p>Recognized: {{ transcription.recognized }}</p>\n      <p>Translated: {{ transcription.translated }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App',\n  data() {\n    return {\n      message: 'Welcome to Speech Recognition and Translation App!',\n      transcription: null\n    };\n  },\n  methods: {\n    async recordAndTranslate() {\n      try {\n        // Simulating speech recognition input\n        const text = \"Hello, how are you?\";\n        const response = await fetch('/record', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({ text })\n        });\n        const data = await response.json();\n        this.transcription = {\n          recognized: data.recognized,\n          translated: data.translated\n        };\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    }\n  }\n};\n</script>\n\n<style>\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"],"mappings":";;EAiCOA,EAAE,EAAC;AAAK;;EAjCfC,GAAA;AAAA;;uBAiCEC,mBAAA,CAOM,OAPNC,UAOM,GANJC,mBAAA,CAAsB,YAAAC,gBAAA,CAAfC,KAAA,CAAAC,OAAO,kBACdH,mBAAA,CAAiE;IAAxDI,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,kBAAA,IAAAD,QAAA,CAAAC,kBAAA,IAAAF,IAAA,CAAkB;KAAE,sBAAoB,GAC7CJ,KAAA,CAAAO,aAAa,I,cAAxBX,mBAAA,CAGM,OAvCVY,UAAA,GAqCMV,mBAAA,CAAiD,WAA9C,cAAY,GAAAC,gBAAA,CAAGC,KAAA,CAAAO,aAAa,CAACE,UAAU,kBAC1CX,mBAAA,CAAiD,WAA9C,cAAY,GAAAC,gBAAA,CAAGC,KAAA,CAAAO,aAAa,CAACG,UAAU,iB,KAtChDC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}