{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Speech Recognition and Translation App\", -1 /* HOISTED */);\nconst _hoisted_2 = [\"disabled\"];\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.recordAndTranslate && $options.recordAndTranslate(...args)),\n    disabled: $data.recording\n  }, \"Record and Translate\", 8 /* PROPS */, _hoisted_2), $data.recognizedText ? (_openBlock(), _createElementBlock(\"p\", _hoisted_3, \"Recognized: \" + _toDisplayString($data.recognizedText), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $data.translatedText ? (_openBlock(), _createElementBlock(\"p\", _hoisted_4, \"Translated: \" + _toDisplayString($data.translatedText), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_createElementVNode","key","_createElementBlock","_hoisted_1","onClick","_cache","args","$options","recordAndTranslate","disabled","$data","recording","_hoisted_2","recognizedText","_hoisted_3","_toDisplayString","_createCommentVNode","translatedText","_hoisted_4"],"sources":["B:\\Kyro Project\\Speech Recognition Project\\frontend\\src\\components\\Record.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Speech Recognition and Translation App</h1>\r\n    <button @click=\"recordAndTranslate\" :disabled=\"recording\">Record and Translate</button>\r\n    <p v-if=\"recognizedText\">Recognized: {{ recognizedText }}</p>\r\n    <p v-if=\"translatedText\">Translated: {{ translatedText }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      recognizedText: '',\r\n      translatedText: '',\r\n      recording: false,\r\n      recognition: null,\r\n    };\r\n  },\r\n  methods: {\r\n    async recordAndTranslate() {\r\n      if (this.recording) return; // Prevent multiple recordings\r\n\r\n      this.recording = true;\r\n      this.recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();\r\n      this.recognition.lang = 'en-US';\r\n      this.recognition.interimResults = false;\r\n      this.recognition.maxAlternatives = 1;\r\n\r\n      this.recognition.start();\r\n\r\n      this.recognition.onresult = async (event) => {\r\n        const speechResult = event.results[0][0].transcript.trim();\r\n        console.log('Result: ', speechResult);\r\n\r\n        try {\r\n          const response = await fetch('/record', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ text: speechResult }),\r\n          });\r\n\r\n          if (response.ok) {\r\n            const data = await response.json();\r\n            this.recognizedText = data.recognized;\r\n            this.translatedText = data.translated;\r\n          } else {\r\n            console.error('Failed to fetch translation.');\r\n          }\r\n        } catch (error) {\r\n          console.error('Error in fetch:', error);\r\n        } finally {\r\n          this.recognition.stop();\r\n          this.recording = false;\r\n        }\r\n      };\r\n\r\n      this.recognition.onerror = (event) => {\r\n        console.error('Error occurred in recognition: ', event.error);\r\n        this.recognition.stop();\r\n        this.recording = false;\r\n      };\r\n    },\r\n  },\r\n  beforeDestroy() {\r\n    if (this.recognition) {\r\n      this.recognition.stop();\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n/* Add your styles here */\r\n</style>\r\n"],"mappings":";gCAEIA,mBAAA,CAA+C,YAA3C,wCAAsC;mBAF9C;;EAAAC,GAAA;AAAA;;EAAAA,GAAA;AAAA;;uBACEC,mBAAA,CAKM,cAJJC,UAA+C,EAC/CH,mBAAA,CAAuF;IAA9EI,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,kBAAA,IAAAD,QAAA,CAAAC,kBAAA,IAAAF,IAAA,CAAkB;IAAGG,QAAQ,EAAEC,KAAA,CAAAC;KAAW,sBAAoB,iBAHlFC,UAAA,GAIaF,KAAA,CAAAG,cAAc,I,cAAvBX,mBAAA,CAA6D,KAJjEY,UAAA,EAI6B,cAAY,GAAAC,gBAAA,CAAGL,KAAA,CAAAG,cAAc,oBAJ1DG,mBAAA,gBAKaN,KAAA,CAAAO,cAAc,I,cAAvBf,mBAAA,CAA6D,KALjEgB,UAAA,EAK6B,cAAY,GAAAH,gBAAA,CAAGL,KAAA,CAAAO,cAAc,oBAL1DD,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}