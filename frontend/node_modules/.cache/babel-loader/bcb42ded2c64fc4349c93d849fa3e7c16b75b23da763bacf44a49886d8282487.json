{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-18e87d7c\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"top-3-phrases-container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Top 3 Unique Phrases\", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.top3Phrases, (phrase, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index,\n      class: \"phrase-item\"\n    }, [_createTextVNode(_toDisplayString(phrase[0]) + \" times \", 1 /* TEXT */), _hoisted_3, _createTextVNode(\" \" + _toDisplayString(phrase[1]) + \" times \", 1 /* TEXT */), _hoisted_4, _createTextVNode(\" \" + _toDisplayString(phrase[2]) + \" times \", 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_Fragment","_renderList","$props","top3Phrases","phrase","index","key","_createTextVNode","_toDisplayString","_hoisted_3","_hoisted_4"],"sources":["B:\\Kyro Project\\Voice Analyzer\\frontend\\src\\components\\Top3Phrases.vue"],"sourcesContent":["<template>\r\n  <div class=\"top-3-phrases-container\">\r\n    <h2>Top 3 Unique Phrases</h2>\r\n    <ul>\r\n      <li v-for=\"(phrase, index) in top3Phrases\" :key=\"index\" class=\"phrase-item\">\r\n        {{ phrase [0] }} times\r\n        <br>\r\n        {{ phrase[1] }} times\r\n        <br>\r\n        {{ phrase[2] }} times\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n  \r\n<script>\r\n  export default {\r\n    props: {\r\n      top3Phrases: {\r\n        type: Array,\r\n        required: true,\r\n      }\r\n    }\r\n  };\r\n</script>\r\n  \r\n  <style scoped>\r\n.top-3-phrases-container {\r\n  max-width: 600px;\r\n  margin: auto;\r\n  padding: 20px;\r\n  background-color: #f5f5f5;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  text-align: center;\r\n  font-family: 'Arial', sans-serif; /* Specify your preferred font */\r\n}\r\n\r\n.header {\r\n  font-size: 24px;\r\n  margin-bottom: 20px;\r\n  color: #333;\r\n  font-weight: bold; /* Example: make the header bold */\r\n}\r\n\r\nul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n\r\n.phrase-item {\r\n  margin-bottom: 10px;\r\n  padding: 10px;\r\n  background-color: #ffffff;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n  transition: background-color 0.3s;\r\n  font-size: 16px; /* Example: set the font size for phrases */\r\n}\r\n\r\n.phrase-item:hover {\r\n  background-color: #f1f1f1;\r\n}\r\n\r\n.phrase-item:nth-child(even) {\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.phrase-item:nth-child(odd) {\r\n  background-color: #fefefe;\r\n}\r\n</style>"],"mappings":";;;EACOA,KAAK,EAAC;AAAyB;gEAClCC,mBAAA,CAA6B,YAAzB,sBAAoB;gEAIpBA,mBAAA,CAAI;gEAEJA,mBAAA,CAAI;;uBAPVC,mBAAA,CAWM,OAXNC,UAWM,GAVJC,UAA6B,EAC7BH,mBAAA,CAQK,c,kBAPHC,mBAAA,CAMKG,SAAA,QAVXC,WAAA,CAIoCC,MAAA,CAAAC,WAAW,EAJ/C,CAIkBC,MAAM,EAAEC,KAAK;yBAAzBR,mBAAA,CAMK;MANuCS,GAAG,EAAED,KAAK;MAAEV,KAAK,EAAC;QAJpEY,gBAAA,CAAAC,gBAAA,CAKWJ,MAAM,OAAO,SAChB,iBAAAK,UAAI,EANZF,gBAAA,CAMY,GACJ,GAAAC,gBAAA,CAAGJ,MAAM,OAAM,SACf,iBAAAM,UAAI,EARZH,gBAAA,CAQY,GACJ,GAAAC,gBAAA,CAAGJ,MAAM,OAAM,SACjB,gB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}